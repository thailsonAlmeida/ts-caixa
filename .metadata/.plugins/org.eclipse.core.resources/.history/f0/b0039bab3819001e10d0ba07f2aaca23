package com.caixa.demo.entities;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;

@Entity
@Table(name = "tb_common_accout")
public class CommonAccount implements Serializable {
	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	private Long agency;
	private String account;
	private Long bank;
	private Double balance;	
	
	@OneToOne(cascade = CascadeType.ALL)
	@JoinTable(name = "tb_account_physical",
		joinColumns = @JoinColumn
			)
	Set<Physical> commonAccount = new HashSet<>();
	
	public CommonAccount() {}

	public CommonAccount(Long id, Long agency, String account, Long bank, Double balance) {
		super();
		this.id = id;
		this.agency = agency;
		this.account = account;
		this.bank = bank;
		this.balance = balance;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Long getAgency() {
		return agency;
	}

	public void setAgency(Long agency) {
		this.agency = agency;
	}

	public String getAccount() {
		return account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	public Long getBank() {
		return bank;
	}

	public void setBank(Long bank) {
		this.bank = bank;
	}

	public Double getBalance() {
		return balance;
	}

	public void setBalance(Double balance) {
		this.balance = balance;
	}

	public Set<Physical> getAccounts() {
		return commonAccount;
	}

	@Override
	public int hashCode() {
		return Objects.hash(id);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CommonAccount other = (CommonAccount) obj;
		return Objects.equals(id, other.id);
	}
	
	

}

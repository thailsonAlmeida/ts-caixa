package com.caixa.demo.services;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.caixa.demo.dto.PhysicalDTO;
import com.caixa.demo.entities.Physical;
import com.caixa.demo.repositories.PhysicalRepository;

import jakarta.persistence.EntityNotFoundException;



@Service
public class PhysicalService {
	
	@Autowired
	private PhysicalRepository repository;	
	
	@Transactional(readOnly = true)
	public List<PhysicalDTO> findAll(){
		List<Physical> list = repository.findAll();
		return list.stream().map(x -> new PhysicalDTO(x)).collect(Collectors.toList());
	}

	@Transactional(readOnly = true)
	public PhysicalDTO findById(long id) {
		Optional<Physical> obj = repository.findById(id);
		Physical entity = obj.get();
		return new PhysicalDTO(entity);
	}

	@Transactional
	public PhysicalDTO insert(PhysicalDTO dto) {
		Physical entity = new Physical();
		
		entity.setAddressPerson(dto.getAddressPerson());
		entity.setCpf(dto.getCpf());
		entity.setIcomePerson(dto.getIncomePerson());
		entity.setNamePerson(dto.getNamePerson());
		entity.setpType(dto.ispType());
		entity.setSituationPerson(dto.isSituationPerson());
		
		entity = repository.save(entity);
		
		return new PhysicalDTO(entity);
	}

	@Transactional
	public PhysicalDTO update(Long id, PhysicalDTO dto) {
		try {
			Physical entity = repository.getReferenceById(id);
	
			entity.setAddressPerson(dto.getAddressPerson());
			entity.setCpf(dto.getCpf());
			entity.setIcomePerson(dto.getIncomePerson());
			entity.setNamePerson(dto.getNamePerson());
			entity.setpType(dto.ispType());
			entity.setSituationPerson(dto.isSituationPerson());
			
			entity = repository.save(entity);
			
			return new PhysicalDTO(entity);
		}
		catch(EntityNotFoundException e) {
			
		}
		
		return null;
	}	
	

}
